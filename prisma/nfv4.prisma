generator client {
  provider = "prisma-client-js"
  output   = "../src/prisma/nfv4"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL_NFV4_WITH_SCHEMA")
}

model configs {
  id    String  @id
  value String?
}

/// This table is a partition table and requires additional setup for migrations. Visit https://pris.ly/d/partition-tables for more info.
/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model events {
  id             BigInt?  @default(dbgenerated("generate_uid()"))
  created_at     DateTime @default(dbgenerated("timezone('utc'::text, now())")) @db.Timestamp(6)
  stream_id      String
  analytic_id    String
  stream_address String
  jpeg           Bytes?
  pipeline_data  Json     @default("{}")

  @@ignore
}

model pipelines {
  stream_id   String
  analytic_id String
  created_at  DateTime @default(dbgenerated("timezone('utc'::text, now())")) @db.Timestamp(6)
  configs     Json     @default("{}")
  streams     streams  @relation(fields: [stream_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([stream_id, analytic_id])
}

model streams {
  id          String      @id
  created_at  DateTime    @default(dbgenerated("timezone('utc'::text, now())")) @db.Timestamp(6)
  address     String
  name        String
  node_num    Int?
  longitude   Float?      @default(0)
  latitude    Float?      @default(0)
  custom_data Json        @default("{}")
  pipelines   pipelines[]
}
